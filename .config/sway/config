set $mod Mod4
set $left h
set $down j
set $up k
set $right l
set $term gnome-terminal --hide-menubar --working-directory=$HOME/git/repo
set $menu rofi -show drun 
#set $menu ulauncher
set $switcher rofi -show window -theme ~/.config/rofi/themes/rounded-blue-dark.rasi -show-icons -window-command "swaymsg [con_id={window}] focus"

##set $menu wofi --show drun --allow-images
set $fileManager xdg-open .
set $lock swaylock -f --config ~/.config/swaylock/config

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/default.png fill

#output "eDP-1" {
#    mode  1920x1080@60.008Hz
#    pos 0 0
#    transform normal
#    scale 1.0
#    scale_filter nearest
#    adaptive_sync off
#    dpms on
#    bg $HOME/Pictures/Wallpaper/background.png fill
#    scale 1
#}

output "DP-1" {
    mode  3440x1440@143.975Hz
    pos 0 0
    transform normal
    scale 1.0
    scale_filter nearest
#    adaptive_sync on
    dpms on
    bg $HOME/Pictures/Wallpaper/background.png fill
    scale 1
}
#output "DP-2" {
#    mode  1920x1080@60.0Hz
#    pos 0 0
#    #pos 0 0
#    transform 270
#    scale 1.0
#    scale_filter nearest
#    adaptive_sync off
#    dpms on
#    bg $HOME/Pictures/Wallpaper/background.png fill
#    scale 1
#}




### Lock screen
    bindsym $mod+Control+l exec $lock

# SoundMixer
    bindcode 122 exec amixer -q set Master 5%- | notify-send -a "volume" "decrease volume" -h int:value:$(pamixer --get-volume)
    bindcode 123 exec amixer -q set Master 5%+ | notify-send -a "volume" "increase volume" -h int:value:$(pamixer --get-volume)
    bindcode 121 exec amixer -q set Master toggle | notify-send -a "volume" "mute" -h int:value:$(pamixer --get-volume)


# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input * {
    xkb_layout de,de
    xkb_variant nodeadkeys
    repeat_delay 250
    #repeat_rate 1
    tap enabled
    dwt enabled
    #natural_scroll enabled
    accel_profile "flat" # disable mouse acceleration (enabled by default; to set it manually, use "adaptive" instead of "flat")
    pointer_accel 0.5 # set mouse sensitivity (between -1 and 1)
}

###
### Screen brightness
###

bindsym XF86MonBrightnessUp exec brightnessctl set 5%+
bindsym XF86MonBrightnessDown exec brightnessctl set 5%-

###
### media control
###

bindsym XF86AudioPrev exec playerctl previous
bindsym XF86AudioPlay exec playerctl play-pause --ignore-player=firefox,chrome
bindsym XF86AudioNext exec playerctl next

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+e exec $fileManager

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Start your switcher
    bindsym alt+tab exec $switcher

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+m exec wlogout 


#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    set $workspace1 "1" 
    set $workspace2 "2" 
    set $workspace3 "3"
    set $workspace4 "4"
    set $workspace5 "5"
    set $workspace6 "6"
    set $workspace7 "7"
    set $workspace8 "8"
    set $workspace9 "9" 
    set $workspace10 "10" 

    # switch to workspace
    bindsym $mod+1 workspace $workspace1
    bindsym $mod+2 workspace $workspace2
    bindsym $mod+3 workspace $workspace3
    bindsym $mod+4 workspace $workspace4
    bindsym $mod+5 workspace $workspace5
    bindsym $mod+6 workspace $workspace6
    bindsym $mod+7 workspace $workspace7
    bindsym $mod+8 workspace $workspace8
    bindsym $mod+9 workspace $workspace9
    bindsym $mod+0 workspace $workspace10

    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $workspace1
    bindsym $mod+Shift+2 move container to workspace $workspace2
    bindsym $mod+Shift+3 move container to workspace $workspace3
    bindsym $mod+Shift+4 move container to workspace $workspace4
    bindsym $mod+Shift+5 move container to workspace $workspace5
    bindsym $mod+Shift+6 move container to workspace $workspace6
    bindsym $mod+Shift+7 move container to workspace $workspace7
    bindsym $mod+Shift+8 move container to workspace $workspace8
    bindsym $mod+Shift+9 move container to workspace $workspace9
    bindsym $mod+Shift+0 move container to workspace $workspace10

##
## Screenshots via grim and slurp
##

    bindsym $mod+Print exec grim -g "$(slurp)" - | swappy -f -
    bindsym $mod+Shift+Print exec grim -o DP-1 | notify-send -a "grim" "Screenshot:" "entire screen"
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+t layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Disable Touchpad / Enable Touchpad
    bindsym $mod+Shift+t exec swaymsg input type:touchpad events toggle
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

    bindgesture swipe:right workspace prev
    bindgesture swipe:left workspace next
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
bindswitch --reload --locked lid:on output eDP-1 disable
bindswitch --reload --locked lid:off output eDP-1 enable

#gaps
gaps inner 4
gaps outer 4
smart_gaps on
smart_borders on
default_border pixel 2 



exec eval $(gnome-keyring-daemon --start --components=ssh)
exec export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/ssh-agent.socket
exec waybar
# exec swaync
exec dunst
#exec swayidle -w \
#	timeout 600 '$lock' \
#	timeout 1200 'swaymsg "output * dpms off"' \
#		resume 'swaymsg "output * dpms on"' \
#	before-sleep '$lock' 
#exec mako
exec sleep 1 && keepassxc
exec swaymsg "workspace 1; exec $term ; layout splitv; exec $term" 
exec swaymsg "workspace 5; exec flatpak run org.signal.Signal" 
exec swaymsg "workspace 2; exec flatpak run org.mozilla.firefox" 
exec swaymsg "workspace 5; exec flatpak run io.github.mimbrero.WhatsAppDesktop" 
exec blueman-applet
exec nm-applet
exec nextcloud
exec wl-paste -t text --watch clipman store

# swaymsg -t get_tree
for_window [class="whatsapp-desktop-linux"] move to workspace 5
for_window [class="Signal"] move to workspace 5
for_window [app_id="org.keepassxc.KeePassXC"] move to workspace 8
for_window [app_id="org.kde.kalk"] floating enable

#for_window [] border none

#worskspaces to displays
workspace 1 output DP-1
workspace 2 output DP-1
workspace 3 output DP-1
workspace 4 output DP-1
workspace 5 output DP-1
workspace 6 output DP-1
workspace 7 output DP-1
workspace 8 output DP-1
workspace 9 output DP-1
workspace 10 output DP-1

include /etc/sway/config.d/*
